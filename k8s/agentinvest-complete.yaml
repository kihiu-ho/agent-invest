# AgentInvest Complete Deployment Manifest
# Includes all components with enhanced fixes:
# - Backend with analytics endpoints and WebSocket support
# - Frontend with Chart.js date adapter
# - Nginx proxy with WebSocket routing
# - Redis cache
# - PostgreSQL database
# - Persistent volume claims
# - ConfigMaps and secrets

---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: functorhk
  labels:
    name: functorhk
    app: agentinvest

---
# ConfigMap for webapp configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: webapp-config
  namespace: functorhk
  labels:
    app: agentinvest
    component: config
data:
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  BACKEND_HOST: "webapp-backend-service"
  BACKEND_PORT: "8000"
  FRONTEND_HOST: "webapp-frontend-service"
  FRONTEND_PORT: "80"
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  ANALYTICS_ENABLED: "true"
  WEBSOCKET_ENABLED: "true"
  CHARTJS_ADAPTER_ENABLED: "true"

---
# Redis ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: functorhk
  labels:
    app: redis
    component: cache
data:
  redis.conf: |
    # Redis Configuration for AgentInvest
    bind 0.0.0.0
    port 6379
    timeout 300
    tcp-keepalive 300
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    save 900 1
    save 300 10
    save 60 10000
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    appendonly yes
    appendfsync everysec
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

---
# Nginx Proxy ConfigMap (from enhanced-nginx-proxy.yaml)
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-proxy-config
  namespace: functorhk
  labels:
    app: nginx-proxy
    component: proxy
data:
  nginx.conf: |
    upstream backend {
        server webapp-backend-service:8000;
    }
    
    upstream frontend {
        server webapp-frontend-service:80;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Frontend routes
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # API routes
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # WebSocket routes
        location /ws/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

---
# Reports PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: reports-pvc
  namespace: functorhk
  labels:
    app: agentinvest
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: vultr-block-storage

---


# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: functorhk
  labels:
    app: redis
    component: cache
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: cache
    spec:
      containers:
      - name: redis
        image: redis:7.2-alpine
        imagePullPolicy: IfNotPresent
        command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: webapp-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: redis-config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        - name: redis-storage
          mountPath: /data
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 999
          runAsGroup: 999
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
      restartPolicy: Always
      securityContext:
        fsGroup: 999

---

# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: functorhk
  labels:
    app: redis
    component: cache
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis

---
# Redis PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: functorhk
  labels:
    app: redis
    component: cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: vultr-block-storage
