apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy
  namespace: functorhk
  labels:
    app: nginx-proxy
    component: proxy
    tier: proxy
  annotations:
    deployment.kubernetes.io/revision: "1"
    agentinvest.io/websocket-proxy: "enabled"
    agentinvest.io/analytics-proxy: "enabled"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: nginx-proxy
      tier: proxy
  template:
    metadata:
      labels:
        app: nginx-proxy
        component: proxy
        tier: proxy
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 9113
          name: metrics
          protocol: TCP
        env:
        - name: NGINX_ENTRYPOINT_QUIET_LOGS
          value: "1"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 6
          successThreshold: 1
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101
          runAsGroup: 101
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
          readOnly: true
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        - name: nginx-tmp
          mountPath: /tmp
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-proxy-config
          defaultMode: 0644
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-tmp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 101
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy-service
  namespace: functorhk
  labels:
    app: nginx-proxy
    component: proxy
    tier: proxy
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30084
    protocol: TCP
    name: http
  - port: 9113
    targetPort: 9113
    nodePort: 30113
    protocol: TCP
    name: metrics
  selector:
    app: nginx-proxy
    tier: proxy
  sessionAffinity: None
